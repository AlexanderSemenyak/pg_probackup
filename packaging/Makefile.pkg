WORKDIR ?= $(CURDIR)
BUILDDIR = $(WORKDIR)/build/
PBK_GIT_REPO = http://github.com/postgrespro/pg_probackup

ifeq ($(PBK_EDITION),std)
	PBK_PKG_REPO = pg_probackup-forks
	PBK_EDITION_FULL = Standart
	PKG_NAME_SUFFIX = std-
else ifeq ($(PBK_EDITION),ent)
	PBK_PKG_REPO = pg_probackup-forks
	PBK_EDITION_FULL = Enterprise
	PKG_NAME_SUFFIX = ent-
else
	PBK_PKG_REPO = pg_probackup
	PBK_EDITION_FULL =
	PBK_EDITION =
	PKG_NAME_SUFFIX =
endif

#ifndef $(PG_VERSIONS)
#PG_VERSIONS = $(PG_VERSIONS_DEFAULT)
#endif

pkg: check_env build/prepare build/all
	@echo Build for all platform: done
#	echo "HELLO"

check_env:
	@if [ -z ${PBK_VERSION} ] ; then \
           echo "Env variable PBK_VERSION is not set" ; \
           false ; \
     fi
	
	@if [ -z ${PBK_RELEASE} ] ; then \
           echo "Env variable PBK_RELEASE is not set" ; \
           false ; \
     fi

	@if [ -z ${PBK_HASH} ] ; then \
           echo "Env variable PBK_HASH is not set" ; \
           false ; \
     fi

build/prepare:
	mkdir -p build

build/clean: build/prepare
	rm -f build/build*

build/all: build/debian build/centos #build/ubuntu build/centos build/oraclelinux build/rhel build/alt build/suse
	@echo Packaging is done

### DEBIAN
build/debian: build/debian_8 #build/debian_9 build/debian_10
	@echo Debian: done

build/debian_8: build/debian_8_9.5 #build/debian_8_9.6 build/debian_8_10 build/debian_8_11 build/debian_8_12 build/debian_8_13
	@echo Debian 8: done

build/debian_9: build/debian_9_9.5 build/debian_9_9.6 build/debian_9_10 build/debian_9_11 build/debian_9_12 build/debian_9_13
	@echo Debian 9: done

build/debian_10: build/debian_9_9.5 build/debian_9_9.6 build/debian_9_10 build/debian_9_11 build/debian_9_12 build/debian_9_13
	@echo Debian 10: done

### UBUNTU
build/ubuntu: build/ubuntu_14.04 build/ubuntu_16.04 build/ubuntu_18.04 build/ubuntu_20.04
	@echo Ubuntu: done

build/ubuntu_14.04: build/ubuntu_14.04_9.5 build/ubuntu_14.04_9.6 build/ubuntu_14.04_10 build/ubuntu_14.04_11 build/ubuntu_14.04_12 build/ubuntu_14.04_13
	@echo Ubuntu 14.04: 

build/ubuntu_16.04: build/ubuntu_16.04_9.5 build/ubuntu_16.04_9.6 build/ubuntu_16.04_10 build/ubuntu_16.04_11 build/ubuntu_16.04_12 build/ubuntu_16.04_13
	@echo Ubuntu 16.04: done

build/ubuntu_18.04: build/ubuntu_18.04_9.5 build/ubuntu_18.04_9.6 build/ubuntu_18.04_10 build/ubuntu_18.04_11 build/ubuntu_18.04_12 build/ubuntu_18.04_13
	@echo Ubuntu 18.04: done

build/ubuntu_20.04: build/ubuntu_20.04_9.5 build/ubuntu_20.04_9.6 build/ubuntu_20.04_10 build/ubuntu_20.04_11 build/ubuntu_20.04_12 build/ubuntu_20.04_13
	@echo Ubuntu 20.04: done

define build_deb
	docker rm -f $1_$2_probackup_$(PKG_NAME_SUFFIX)$(PBK_VERSION) >> /dev/null 2>&1 ; \
	docker run \
		-v $(WORKDIR)/packaging:/app/in \
		-v $(WORKDIR)/build/data/$(PBK_PKG_REPO)/$1/$2/pg-probackup-$(PKG_NAME_SUFFIX)$4/$(PBK_VERSION):/app/out \
		-e "DISTRIB=$1" -e "DISTRIB_VERSION=$2" -e "CODENAME=$3" -e "PG_VERSION=$4" -e "PG_FULL_VERSION=$5" \
		-e "PKG_HASH=$(PBK_HASH)" -e "PKG_URL=$(PBK_GIT_REPO)" -e "PKG_RELEASE=$(PBK_RELEASE)" -e "PKG_NAME=pg-probackup-$(PKG_NAME_SUFFIX)$4" \
		-e "PKG_VERSION=$(PBK_VERSION)" -e "PBK_EDITION=$(PBK_EDITION)" -e "PBK_EDITION_FULL=$(PBK_EDITION_FULL)" \
		--name $1_$2_probackup_$(PKG_NAME_SUFFIX)$(PBK_VERSION) \
		--rm pgpro/$1:$2 /app/in/scripts/deb.sh
endef

include packaging/Makefile.debian
include packaging/Makefile.ubuntu

# CENTOS
build/centos: build/centos_6 #build/centos_7 build/centos_8 #build/rpm_repo_package_centos
	@echo Centos: done

build/centos_6: build/centos_6_9.5 #build/centos_6_9.6 build/centos_6_10 build/centos_6_11 build/centos_6_12 build/centos_6_13
	@echo Centos 6: done

build/centos_7: build/centos_7_9.5 build/centos_7_9.6 build/centos_7_10 build/centos_7_11 build/centos_7_12 build/centos_7_13
	@echo Centos 7: done

build/centos_8: build/centos_8_9.5 build/centos_8_9.6 build/centos_8_10 build/centos_8_11 build/centos_8_12 build/centos_8_13
	@echo Centos 8: done

# Oracle Linux
build/oraclelinux: build/oraclelinux_6 build/oraclelinux_7 build/oraclelinux_8 #build/rpm_repo_package_oraclelinux
	@echo Oraclelinux: done

build/oraclelinux_6: build/oraclelinux_6_9.5 build/oraclelinux_6_9.6 build/oraclelinux_6_10 build/oraclelinux_6_11 build/oraclelinux_6_12 build/oraclelinux_6_13
	@echo Oraclelinux 6: done

build/oraclelinux_7: build/oraclelinux_7_9.5 build/oraclelinux_7_9.6 build/oraclelinux_7_10 build/oraclelinux_7_11 build/oraclelinux_7_12 build/oraclelinux_7_13
	@echo Oraclelinux 7: done

build/oraclelinux_8: build/oraclelinux_8_9.5 build/oraclelinux_8_9.6 build/oraclelinux_8_10 build/oraclelinux_8_11 build/oraclelinux_8_12 build/oraclelinux_8_13
	@echo Oraclelinux 8: done

# RHEL
build/rhel: build/rhel_6 build/rhel_7 build/rhel_8 #build/rpm_repo_package_rhel
	@echo Rhel: done

build/rhel_6: build/rhel_6_9.5 build/rhel_6_9.6 build/rhel_6_10 build/rhel_6_11 build/rhel_6_12 build/rhel_6_13
	@echo Rhel 6: done

build/rhel_7: build/rhel_7_9.5 build/rhel_7_9.6 build/rhel_7_10 build/rhel_7_11 build/rhel_7_12 build/rhel_7_13
	@echo Rhel 7: done

build/rhel_8: build/rhel_8_9.5 build/rhel_8_9.6 build/rhel_8_10 build/rhel_8_11 build/rhel_8_12 build/rhel_8_13
	@echo Rhel 8: done


define build_rpm
	docker rm -f $1_$2_probackup_$(PKG_NAME_SUFFIX)$(PBK_VERSION) >> /dev/null 2>&1 ; \
	docker run \
		-v $(WORKDIR)/packaging:/app/in \
		-v $(WORKDIR)/build/data/$(PBK_PKG_REPO)/$1/$2/pg_probackup-$(PKG_NAME_SUFFIX)$4/$(PBK_VERSION):/app/out \
		-e "DISTRIB=$1" -e "DISTRIB_VERSION=$2" -e "CODENAME=$3" -e "PG_VERSION=$4" -e "PG_FULL_VERSION=$5" \
		-e "PKG_HASH=$(PBK_HASH)" -e "PKG_URL=$(PBK_GIT_REPO)" -e "PKG_RELEASE=$(PBK_RELEASE)" -e "PKG_NAME=pg_probackup-$(PKG_NAME_SUFFIX)$4" \
		-e "PKG_VERSION=$(PBK_VERSION)" -e "PBK_EDITION=$(PBK_EDITION)" -e "PBK_EDITION_FULL=$(PBK_EDITION_FULL)" \
		--name $1_$2_probackup_$(PKG_NAME_SUFFIX)$(PBK_VERSION) \
		--rm pgpro/$1:$2 /app/in/scripts/rpm.sh
endef

include packaging/Makefile.centos
include packaging/Makefile.rhel
include packaging/Makefile.oraclelinux


# Alt Linux
build/alt: build/alt_7 build/alt_8 build/alt_9
	@echo Alt Linux: done

build/alt_7: build/alt_7_9.5 build/alt_7_9.6 build/alt_7_10 build/alt_7_11 build/alt_7_12 build/alt_7_13
	@echo Alt Linux 7: done

build/alt_8: build/alt_8_9.5 build/alt_8_9.6 build/alt_8_10 build/alt_8_11 build/alt_8_12 build/alt_8_13
	@echo Alt Linux 8: done

build/alt_9: build/alt_9_9.5 build/alt_9_9.6 build/alt_9_10 build/alt_9_11 build/alt_9_12 build/alt_9_13
	@echo Alt Linux 9: done

define build_alt
	docker rm -f $1_$2_probackup_$(PKG_NAME_SUFFIX)$(PBK_VERSION) >> /dev/null 2>&1 ; \
	docker run \
		-v $(WORKDIR)/packaging:/app/in \
		-v $(WORKDIR)/build/data/$(PBK_PKG_REPO)/$1/$2/pg_probackup-$(PKG_NAME_SUFFIX)$4/$(PBK_VERSION):/app/out \
		-e "DISTRIB=$1" -e "DISTRIB_VERSION=$2" -e "CODENAME=$3" -e "PG_VERSION=$4" -e "PG_FULL_VERSION=$5" \
		-e "PKG_HASH=$(PBK_HASH)" -e "PKG_URL=$(PBK_GIT_REPO)" -e "PKG_RELEASE=$(PBK_RELEASE)" -e "PKG_NAME=pg_probackup-$(PKG_NAME_SUFFIX)$4" \
		-e "PKG_VERSION=$(PBK_VERSION)" -e "PBK_EDITION=$(PBK_EDITION)" -e "PBK_EDITION_FULL=$(PBK_EDITION_FULL)" \
		--name $1_$2_probackup_$(PKG_NAME_SUFFIX)$(PBK_VERSION) \
		--rm pgpro/$1:$2 /app/in/scripts/alt.sh
endef

include packaging/Makefile.alt

# SUSE Linux
build/suse: build/suse_15.1 build/suse_15.2
	@echo Suse: done

build/suse_15.1: build/suse_15.1_9.5 build/suse_15.1_9.6 build/suse_15.1_10 build/suse_15.1_11 build/suse_15.1_12 build/suse_15.1_13
	@echo Rhel 15.1: done

build/suse_15.2: build/suse_15.2_9.5 build/suse_15.2_9.6 build/suse_15.2_10 build/suse_15.2_11 build/suse_15.2_12 build/suse_15.2_13
	@echo Rhel 15.1: done

define build_suse
	docker rm -f $1_$2_probackup_$(PKG_NAME_SUFFIX)$(PBK_VERSION) >> /dev/null 2>&1 ; \
	docker run \
		-v $(WORKDIR)/packaging:/app/in \
		-v $(WORKDIR)/build/data/$(PBK_PKG_REPO)/$1/$2/pg_probackup-$(PKG_NAME_SUFFIX)$4/$(PBK_VERSION):/app/out \
		-e "DISTRIB=$1" -e "DISTRIB_VERSION=$2" -e "CODENAME=$3" -e "PG_VERSION=$4" -e "PG_FULL_VERSION=$5" \
		-e "PKG_HASH=$(PBK_HASH)" -e "PKG_URL=$(PBK_GIT_REPO)" -e "PKG_RELEASE=$(PBK_RELEASE)" -e "PKG_NAME=pg_probackup-$(PKG_NAME_SUFFIX)$4" \
		-e "PKG_VERSION=$(PBK_VERSION)" -e "PBK_EDITION=$(PBK_EDITION)" -e "PBK_EDITION_FULL=$(PBK_EDITION_FULL)" \
		--name $1_$2_probackup_$(PKG_NAME_SUFFIX)$(PBK_VERSION) \
		--rm pgpro/$1:$2 /app/in/scripts/suse.sh
endef

include packaging/Makefile.suse

#### REPO BUILD ####

repo: repo/debian repo/ubuntu repo/centos repo/rhel repo/oraclelinux repo/alt repo/suse
	@echo Build repo for all platform: done

# Debian
repo/debian: build/repo_debian_8 repo/debian_9 repo/debian_10
	@echo Build repo for debian platforms: done

build/repo_debian_8:
	$(call build_repo_deb,debian,8,jessie)
	touch build/repo_debian_8

build/repo_debian_9:
	$(call build_repo_deb,debian,9,stretch)
	touch build/repo_debian_9

build/repo_debian_10:
	$(call build_repo_deb,debian,10,buster)
	touch build/repo_debian_10

# Ubuntu
repo/ubuntu: build/repo_ubuntu_14.04 build/repo_ubuntu_16.04 build/repo_ubuntu_18.04 build/repo_ubuntu_20.04
	@echo Build repo for ubuntu platforms: done

build/repo_ubuntu_14.04:
	$(call build_repo_deb,ubuntu,14.04,trusty)
	touch build/repo_ubuntu_14.04

build/repo_ubuntu_16.04:
	$(call build_repo_deb,ubuntu,16.04,xenial)
	touch build/repo_ubuntu_16.04

build/repo_ubuntu_18.04:
	$(call build_repo_deb,ubuntu,18.04,bionic)
	touch build/repo_ubuntu_18.04

build/repo_ubuntu_20.04:
	$(call build_repo_deb,ubuntu,20.04,focal)
	touch build/repo_ubuntu_20.04

# Centos
repo/centos: build/repo_centos_6 build/repo_centos_7 build/repo_centos_8
	@echo Build repo for centos platforms: done

build/repo_centos_6:
	$(call build_repo_rpm,centos,6,,)
	touch build/repo_centos_6

build/repo_centos_7:
	$(call build_repo_rpm,centos,7,,)
	touch build/repo_centos_7

build/repo_centos_8:
	$(call build_repo_rpm,centos,8,,)
	touch build/repo_centos_8

# Oraclelinux
repo/oraclelinux: build/repo_oraclelinux_6 build/repo_oraclelinux_7 build/repo_oraclelinux_8
	@echo Build repo for oraclelinux platforms: done

build/repo_oraclelinux_6:
	$(call build_repo_rpm,oraclelinux,6,,)
	touch build/repo_oraclelinux_6

build/repo_oraclelinux_7:
	$(call build_repo_rpm,oraclelinux,7,,)
	touch build/repo_oraclelinux_7

build/repo_oraclelinux_8:
	$(call build_repo_rpm,oraclelinux,8,,)
	touch build/repo_oraclelinux_8

# RHEL
repo/rhel: build/repo_rhel_6 build/repo_rhel_7 build/repo_rhel_8
	@echo Build repo for rhel platforms: done

build/repo_rhel_6:
	$(call build_repo_rpm,rhel,6,,)
	touch build/repo_rhel_6

build/repo_rhel_7:
	$(call build_repo_rpm,rhel,7,,)
	touch build/repo_rhel_7

build/repo_rhel_8:
	$(call build_repo_rpm,rhel,8,,)
	touch build/repo_rhel_8

# ALT
repo/alt: build/repo_alt_7 build/repo_alt_8 build/repo_alt_9
	@echo Build repo for alt platforms: done

build/repo_alt_7:
	$(call build_repo_alt,alt,7,,)
	touch build/repo_alt_7

build/repo_alt_8:
	$(call build_repo_alt,alt,8,,)
	touch build/repo_alt_8

build/repo_alt_9:
	$(call build_repo_alt,alt,9,,)
	touch build/repo_alt_9

# SUSE
repo/suse: build/repo_suse_15.1 build/repo_suse_15.2
	@echo Build repo for suse platforms: done

build/repo_suse_15.1:
	$(call build_repo_suse,suse,15.1,,)
	touch build/repo_suse_15.1

build/repo_suse_15.2:
	$(call build_repo_suse,suse,15.2,,)
	touch build/repo_suse_15.2
#
#define repo_finish
#	docker run -v $(WORKDIR)/build/pkg/keys:/app/in -v $(WORKDIR)/build/www:/app/www \
#	-e "DISTRIB=$1" -e "DISTRIB_VERSION=$2" -e "CODENAME=$3" \
#	--rm $1:$2 bash -exc "cp -av /app/in/*rpm /app/www/mamonsu/keys && cd /app/www/mamonsu/ && \
#	ln -s $(VERSION) latest"
#endef

define build_repo_deb
	docker rm -f $1_$2_pbk_repo >> /dev/null 2>&1 ; \
	docker run \
		-v $(WORKDIR)/packaging/repo:/app/repo \
		-v $(WORKDIR)/build/data/www:/app/www \
		-v $(WORKDIR)/build/data/$(PBK_PKG_REPO)/$1/$2:/app/in \
		-e "DISTRIB=$1" -e "DISTRIB_VERSION=$2" -e "CODENAME=$3" \
		-e "PBK_PKG_REPO=$(PBK_PKG_REPO)" -e "PBK_EDITION=$(PBK_EDITION)" \
		--name $1_$2_pbk_repo \
		--rm pgpro/repo /app/repo/scripts/deb.sh
endef

define build_repo_rpm
	docker rm -f $1_$2_pbk_repo >> /dev/null 2>&1 ; \
	docker run \
		-v $(WORKDIR)/packaging/repo:/app/repo \
		-v $(WORKDIR)/build/data/www:/app/www \
		-v $(WORKDIR)/build/data/$(PBK_PKG_REPO)/$1/$2:/app/in \
		-e "DISTRIB=$1" -e "DISTRIB_VERSION=$2" -e "CODENAME=$3" \
		-e "PBK_PKG_REPO=$(PBK_PKG_REPO)" -e "PBK_EDITION=$(PBK_EDITION)" \
		--name $1_$2_pbk_repo \
		--rm pgpro/repo /app/repo/scripts/rpm.sh
endef

define build_repo_alt
	docker rm -f $1_$2_pbk_repo >> /dev/null 2>&1 ; \
	docker run \
		-v $(WORKDIR)/packaging/repo:/app/repo \
		-v $(WORKDIR)/build/data/www:/app/www \
		-v $(WORKDIR)/build/data/$(PBK_PKG_REPO)/$1/$2:/app/in \
		-e "DISTRIB=$1" -e "DISTRIB_VERSION=$2" -e "CODENAME=$3" \
		-e "PBK_PKG_REPO=$(PBK_PKG_REPO)" -e "PBK_EDITION=$(PBK_EDITION)" \
		--name $1_$2_pbk_repo \
		--rm pgpro/$1:$2 /app/repo/scripts/alt.sh
endef

define build_repo_suse
	docker rm -f $1_$2_pbk_repo >> /dev/null 2>&1 ; \
	docker run \
		-v $(WORKDIR)/packaging/repo:/app/repo \
		-v $(WORKDIR)/build/data/www:/app/www \
		-v $(WORKDIR)/build/data/$(PBK_PKG_REPO)/$1/$2:/app/in \
		-e "DISTRIB=$1" -e "DISTRIB_VERSION=$2" -e "CODENAME=$3" \
		-e "PBK_PKG_REPO=$(PBK_PKG_REPO)" -e "PBK_EDITION=$(PBK_EDITION)" \
		--name $1_$2_pbk_repo \
		--rm pgpro/$1:$2 /app/repo/scripts/suse.sh
endef
